{"version":3,"file":"main.js","mappings":"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","sources":["webpack://evie_installer/./src/app/Update_Launcher.ts","webpack://evie_installer/./src/app/Utils.ts","webpack://evie_installer/external node-commonjs \"child_process\"","webpack://evie_installer/external node-commonjs \"electron\"","webpack://evie_installer/external node-commonjs \"original-fs\"","webpack://evie_installer/webpack/bootstrap","webpack://evie_installer/./src/main.ts"],"sourcesContent":["import { access, accessSync, constants, fstat, promises as fs } from \"original-fs\";\r\nimport { exec } from \"child_process\";\r\nimport { Get_Launcher_Release, RESPONSE } from \"./Utils\";\r\n\r\n\r\n\r\nconst Launcher_Version_File_Name = \"./Launcher_Version.txt\";\r\n\r\nexport async function Update_Launcher(): Promise<RESPONSE> {\r\n\r\n    const exists = await fs.access(Launcher_Version_File_Name, constants.F_OK).then(() => true).catch(() => false)\r\n    \r\n    //this means that the launcher version existsm and that we can fetch a new one from github.\r\n    if (exists){\r\n        const version = new Date((await fs.readFile(Launcher_Version_File_Name)).toString('utf8'))\r\n        //now check if the version got from the latest release is greater than this launchers version.\r\n        //this launcher version is got from the Launcher_Version.txt file.\r\n        //read the version string from the file.\r\n        const Latest_Release = await Get_Launcher_Release()\r\n        const Release_Version = new Date(Latest_Release.published_at)\r\n\r\n        if (Release_Version > version){\r\n            return RESPONSE.NEED_UPDATE_LAUNCHER\r\n        }\r\n    }\r\n    else{\r\n        //if the launcher version file does not exist.\r\n        //this means that this is the first time that the launcher is being run.\r\n        //so we need to create the launcher version file.\r\n        await fs.writeFile(Launcher_Version_File_Name, new Date().toString())\r\n    }\r\n\r\n    return RESPONSE.NULL\r\n}\r\n\r\nexport async function Start_Launcher_Update(){\r\n    const Latest_Release = await Get_Launcher_Release()\r\n    const Release_Version = new Date(Latest_Release.published_at)\r\n    //we need to update the launcher.\r\n    //we need to delete the Launcher_Version.txt file and then create a new one with the new version.\r\n    await fs.unlink(Launcher_Version_File_Name)\r\n    await fs.writeFile(Launcher_Version_File_Name, Release_Version.toString())\r\n    //now we need to download the new launcher.\r\n    await Download_Launcher(Latest_Release)\r\n} \r\n\r\nasync function Download_Launcher(Release: any){\r\n    const Download_Link = Release.assets[0].browser_download_url\r\n    const Download_Response = await fetch(Download_Link)\r\n    //Start the downloaded executable. and at the same time stop this launcher.\r\n    const Buffer = await Download_Response.arrayBuffer()\r\n    await fs.writeFile('./Evie_Installer_New.exe', new Uint8Array(Buffer))\r\n    //now startup the executable.\r\n    await fs.chmod('./Evie_Installer_New.exe', 0o755)\r\n    exec('./Evie_Installer_New.exe --Remove_Old_Launcher')\r\n}\r\n\r\nexport async function Remove_Old_Launcher(){\r\n    //remove the old launcher.\r\n    await fs.unlink('./Evie_Installer.exe')\r\n    //rename the new launcher to the old launcher.\r\n    await fs.rename('./Evie_Installer_New.exe', './Evie_Installer.exe')\r\n    //releanch this launcher so that it doesnt have the _new postfix init.\r\n    await fs.chmod('./Evie_Installer.exe', 0o755)\r\n    exec('./Evie_Installer.exe')\r\n}","export enum RESPONSE{\r\n    NULL,\r\n    NEED_UPDATE_LAUNCHER,\r\n    NEED_UPDATE_EVIE,\r\n    NEED_INSTALL_GIT,\r\n    NEED_INSTALL_WINGET,\r\n}\r\n\r\nexport async function Get_Launcher_Release(){\r\n    const response = await fetch('https://api.github.com/repos/Gabidal/Evie_Installer/releases/latest');\r\n    return await response.json();\r\n}\r\nexport async function Get_Compiler_Release(){\r\n    const response = await fetch('https://api.github.com/repos/Gabidal/Evie/releases/latest');\r\n    return await response.json();\r\n}","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"original-fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { app, BrowserWindow, ipcMain } from 'electron';\r\nimport { Remove_Old_Launcher } from './app/Update_Launcher';\r\n\r\nif (process.argv.length > 1 && process.argv[1] === '--Remove_Old_Launcher'){\r\n    Remove_Old_Launcher()\r\n}\r\n\r\nconst createWindow = (): void => {\r\n  let win = new BrowserWindow({\r\n    width: 400,\r\n    height: 100,\r\n    titleBarStyle: 'hidden',\r\n    resizable: false,\r\n\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      contextIsolation: false\r\n    }\r\n  });\r\n\r\n  win.loadFile('index.html');\r\n}\r\n\r\napp.on('ready', createWindow);\r\n\r\nipcMain.on('Close', () => {\r\n  process.exit(0);\r\n});"],"names":[],"sourceRoot":""}